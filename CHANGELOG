как работает генерация частей карты в сервисах типа osm
===
меня интересует тайлинг и рендеринг, как мне сделать сервис который бы выводил на странице карту osm а поверх неё дополнительный слой на котором бы рендерелись маршруты из имеющихся файлов gpx
===
давай напишем такой сервис на node js
он берёт все файлы gpx из определённой папки, генерирует тайлы на которых отренедены треки
а на 80 порту работает веб сервер
на всю страницу без отступов отображается карта osm а поверх неё дополнительный слой из тайлов загруженных с веб сервера
===
при установке node-mapnik возникает ошибка
npm error code 1
npm error path /Users/r.bauer/Bag/gpx-tile-server/node_modules/mapnik
npm error command failed
npm error command sh -c node-pre-gyp install --fallback-to-build
This module is not supported, and leaks memory.

можем ли мы использовать другую библиотеку?
===
я вижу что функция createMapnikStyle вызывается при каждом запросе кусочка карты, а она в своюб очередь вызывает loadGPXFiles, это не очень производительно и мы перчитываем все файлы каждый раз давай выподним это один раз и закешируем, и при запросе тайла будем брать результат из кэша
===
давай добавим кэширование ещё и самих тайлов
при первом запросе тайл сохраняется в файл
при повторном запросе того же тайла он просто возвращается из файла
===
хотелось бы добавить какую-то оптимизацию, например заранее пробежаться по массиву geojson.features и опредлить через какие квадраты проходит трек, чтобы в бальнейщем при запросе тайла по конкретным координатам рендерить в svg только те которые проходят через такой блок
===
карта всегда открывается на координатах 51.505, -0.09
хотеось бы чтобы сервер сообщал на фронт где находится центр всех треков полученных из gpx а так же необходимый масштаб чтобы видно было все треки разом
===
давай теперь добавим страницу по пути /admin
на ней будет содержаться форма отправки одного или нескольких gpx файлов
файлы будут добавляться к уже существующим в папке gpx-files
и будет обновлен кэш (функция initializeCache).
так же нужно учесть что если есть закешированные в папке tile-cache тайлы на которые поппадают новые треки, их нужно удалить
===
давай страницу /admin по аналогии с корневой уберём в папку public
===
давай теперь на странице admin будем ещё выводить список gpx файлов, и на против каждого в списке кнопку удаления.
при удалении gpx файла так-же нужно обновить кэш.
===
при удалении файла, прр попытке загрузить тайлы на котором был трек из удалённого файла возникает ошибкаTypeError: Cannot read properties of undefined (reading 'geometry')
    at /Users/r.bauer/Bag/gpx-tile-server/tile-server.js:101:26
    at Array.map (<anonymous>)
    at renderTile (/Users/r.bauer/Bag/gpx-tile-server/tile-server.js:99:49)
    at /Users/r.bauer/Bag/gpx-tile-server/tile-server.js:149:24
    at Layer.handleRequest (/Users/r.bauer/Bag/gpx-tile-server/node_modules/router/lib/layer.js:152:17)
    at next (/Users/r.bauer/Bag/gpx-tile-server/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/Users/r.bauer/Bag/gpx-tile-server/node_modules/router/lib/route.js:117:3)
    at handle (/Users/r.bauer/Bag/gpx-tile-server/node_modules/router/index.js:435:11)
    at Layer.handleRequest (/Users/r.bauer/Bag/gpx-tile-server/node_modules/router/lib/layer.js:152:17)
    at /Users/r.bauer/Bag/gpx-tile-server/node_modules/router/index.js:295:15
===
на странице админ в начале страницы нужно добавить ссылку "назад" которая будет вести в корень.
кнопка "загрузить" на странице админ, не должна быть во всю ширину страницы как сейчас.
цвет линии которой рендерятся треки нужно поменять на синий.
